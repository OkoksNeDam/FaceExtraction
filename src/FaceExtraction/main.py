from src.FaceExtraction.face_extractor import FaceExtractor
from src.FaceExtraction.model_outputs_enum import ModelOutputs
from src.FaceExtraction.utils import *


if __name__ == '__main__':

    # Clear results, which were previously generated by model.
    delete_files_from_folder(folder='./model_output/*')

    # Get path of selected image, which will be further processed.
    analyzed_image_filepath = chose_file()

    # Checking if a file has a .jpg extension.
    if get_file_extension(analyzed_image_filepath) not in [".jpg", ".jpeg"]:
        save_message(filepath="../../model_output/message.txt", message="Файл должен иметь расширение jpg.")
        sys.exit()

    image_to_crop = cv2.imread(analyzed_image_filepath)

    face_extractor = FaceExtractor(model_result_folder="./model_output/",
                                   face_part_classifier_filepath="downloaded_models/face_part_classifier.pickle")
    model_output = face_extractor.extract_face_from(image_to_crop)

    if isinstance(model_output, ModelOutputs):
        save_message("./model_output/message.txt", model_output.value)
    else:
        save_image(model_output, "./model_output/result_image.jpg")
